#!/bin/sh

set -eu

indent() {
  sed -u 's/^/       /'
}

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|JAVA_OPTS)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

BP_DIR="$(cd "$(dirname "$0")" && pwd)"
BUILD_DIR=$1
CACHE_DIR=$2
OPT_DIR=$BP_DIR/../opt/
export_env_dir $3

#Download npm
mkdir -p "$CACHE_DIR/apt/cache/archives/partial"
mkdir -p "$CACHE_DIR/apt/state/lists/partial"
echo "-----> Installing npm... "
apt-get -o debug::nolocking=true -o dir::cache=$CACHE_DIR/apt/cache -o dir::state=$CACHE_DIR/apt/state update -y | indent
apt-get -o debug::nolocking=true -o dir::cache=$CACHE_DIR/apt/cache -o dir::state=$CACHE_DIR/apt/state -y --allow-downgrades --allow-remove-essential --allow-change-held-packages -d install --reinstall npm | indent

#Set environment variables for every startup
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
export DOTNET_ROOT="\$HOME/bin/dotnet"
export PATH="\$HOME/.apt/usr/bin:\$PATH"
export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
export INCLUDE_PATH="\$HOME/.apt/usr/include:\$INCLUDE_PATH"
export CPATH="\$INCLUDE_PATH"
export CPPPATH="\$INCLUDE_PATH"
export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
export PYTHONPATH="\$HOME/.apt/usr/lib/python2.7/dist-packages"
EOF

#Install the downloaded packages above
for DEB in $(ls -1 $CACHE_DIR/apt/cache/archives/*.deb);do dpkg -x $DEB $BUILD_DIR/.apt/;done

#Give files execution permissions
cp -a $OPT_DIR/. $BUILD_DIR/bin/
cp -a $BP_DIR/../web/. $BUILD_DIR/bin/

chmod $BUILD_DIR/bin/Server/Impostor.Server
chmod +x $BUILD_DIR/bin/run
chmod +x $BUILD_DIR/bin/localtunnel.js
